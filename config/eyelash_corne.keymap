#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMAK";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp F     &kp P        &kp G                                         &kp UP                &kp J                     &kp L        &kp U                                   &kp Y    &kp SEMICOLON  &mt BACKSPACE MINUS
&kp LSHFT  &kp A  &kp R  &kp S     &kp T        &kp D                               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                     &kp N        &kp E                                   &kp I    &kp O          &kp SQT
&kp LALT   &kp Z  &kp X  &kp C     &kp V        &kp B                 &kp K_MUTE              &kp DOWN              &kp K                     &kp M        &kp COMMA                               &kp DOT  &kp FSLH       &tog 4
                         &kp LGUI  &lt 1 ENTER  &mt LEFT_CONTROL TAB                                                &mt LEFT_SHIFT BACKSPACE  &lt 2 SPACE  &lt 3 C_AC_NEXT_KEYBOARD_LAYOUT_SELECT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp LESS_THAN     &kp GREATER_THAN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                &mmv MOVE_UP                     &kp AT_SIGN      &kp LS(AMPERSAND)  &kp ASTERISK    &kp PERCENT  &kp PIPE              &kp MINUS
&trans     &bt BT_CLR_ALL   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp EQUAL          &kp PLUS        &kp HOME     &kp END               &kp PG_UP
&trans     &kp EXCLAMATION  &kp AT_SIGN       &kp HASH           &kp DOLLAR            &kp ASTERISK           &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &kp MINUS          &kp UNDERSCORE  &kp SLASH    &kp NON_US_BACKSLASH  &kp PG_DN
                                              &trans             &trans                &trans                                                                                &trans           &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "MVMENT";
            bindings = <
&trans  &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP                              &mmv MOVE_UP                     &kp PG_UP  &kp DOWN         &kp ASTRK    &kp LPAR  &kp RPAR   &out OUT_TOG
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PG_DN  &kp LEFT         &kp DOWN     &kp UP    &kp RIGHT  &bt BT_CLR_ALL
&trans  &trans  &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans          &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp LS(LC(TAB))  &kp LC(TAB)  &kp RBRC  &kp PIPE   &kp TILDE
                                &trans          &trans           &kp SPACE                                                                  &kp RET    &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &kp F5                                  &mmv MOVE_UP                     &kp C_VOLUME_UP   &kp F7  &kp F8  &kp F9  &kp F12  &kp PRINTSCREEN
&trans  &trans  &kp N4  &kp N5  &kp N6  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_PLAY_PAUSE  &kp F4  &kp F5  &kp F6  &kp F11  &kp F12
&trans  &trans  &kp N1  &kp N2  &kp N3  &kp N0    &kp C_MUTE                    &mmv MOVE_DOWN                   &kp C_VOL_DN      &kp F1  &kp F2  &kp F3  &kp F10  &kp PAUSE_BREAK
                        &trans  &kp N0  &trans                                                                   &trans            &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
